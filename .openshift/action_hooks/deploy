#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

source $OPENSHIFT_HOMEDIR/python/virtenv/bin/activate

if [ ! -f $OPENSHIFT_DATA_DIR/sqlite3.db ]
then
    echo "Copying $OPENSHIFT_REPO_DIR/wsgi/openshift/sqlite3.db to $OPENSHIFT_DATA_DIR"
    cp "$OPENSHIFT_REPO_DIR"wsgi/openshift/sqlite3.db $OPENSHIFT_DATA_DIR
    python "$OPENSHIFT_REPO_DIR".openshift/action_hooks/secure_db.py | tee ${OPENSHIFT_DATA_DIR}/CREDENTIALS
else
    echo "Executing 'python $OPENSHIFT_REPO_DIR/wsgi/openshift/manage.py syncdb --noinput'"
    python "$OPENSHIFT_REPO_DIR"wsgi/openshift/manage.py syncdb --noinput
fi

echo "Executing 'python $OPENSHIFT_REPO_DIR/wsgi/openshift/manage.py collectstatic --noinput'"
python "$OPENSHIFT_REPO_DIR"wsgi/openshift/manage.py collectstatic --noinput

echo "copying migrations to  app-root storage"
echo "mv "$OPENSHIFT_REPO_DIR"wsgi/openshift/blogs/migrations $OPENSHIFT_DATA_DIR"
cp -r "${OPENSHIFT_DATA_DIR}migrations" ${OPENSHIFT_REPO_DIR}wsgi/openshift/blogs
 
# echo "generating migration files 'python $OPENSHIFT_REPO_DIR/wsgi/openshift/manage.py schemamigration blogs --auto'"
python "$OPENSHIFT_REPO_DIR"wsgi/openshift/manage.py schemamigration blogs --auto
 
echo "Executing 'python $OPENSHIFT_REPO_DIR/wsgi/openshift/manage.py migrate blogs'"
python "$OPENSHIFT_REPO_DIR"wsgi/openshift/manage.py migrate blogs
 
 
echo "saving migrations to persistent storage"
echo "cp -r "$OPENSHIFT_REPO_DIR"wsgi/openshift/blogs/migrations $OPENSHIFT_DATA_DIR"
cp -r "${OPENSHIFT_REPO_DIR}wsgi/openshift/blogs/migrations" ${OPENSHIFT_DATA_DIR}